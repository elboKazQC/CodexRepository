#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import tkinter as tk
from tkinter import ttk
import math

def test_screen_detection():
    """Teste la d√©tection d'√©cran portable bas√©e sur le DPI et la taille physique"""

    # Cr√©er une fen√™tre temporaire pour les mesures
    root = tk.Tk()
    root.withdraw()  # Cacher la fen√™tre

    try:
        # Obtenir les informations d'√©cran
        screen_width = root.winfo_screenwidth()
        screen_height = root.winfo_screenheight()

        print(f"=== D√âTECTION D'√âCRAN PORTABLE ===")
        print(f"R√©solution d√©tect√©e: {screen_width}x{screen_height}")

        try:
            # Calculer le DPI et la taille physique
            dpi = root.winfo_fpixels('1i')
            diagonal_pixels = math.sqrt(screen_width**2 + screen_height**2)
            diagonal_inches = diagonal_pixels / dpi

            print(f"DPI d√©tect√©: {dpi:.1f}")
            print(f"Diagonale physique: {diagonal_inches:.1f} pouces")

            # Crit√®res de d√©tection d'√©cran portable
            is_portable_size = diagonal_inches <= 16.5  # √âcrans <= 16.5" sont g√©n√©ralement portables
            is_low_res = screen_width < 1366 or screen_height < 768  # R√©solutions classiquement faibles
            is_high_dpi = dpi > 110  # DPI √©lev√©, souvent signe d'√©cran portable haute densit√©

            print(f"\n=== ANALYSE DES CRIT√àRES ===")
            print(f"√âcran physique ‚â§ 16.5‚Ä≥: {'‚úÖ' if is_portable_size else '‚ùå'} ({diagonal_inches:.1f}‚Ä≥)")
            print(f"R√©solution faible: {'‚úÖ' if is_low_res else '‚ùå'} ({screen_width}x{screen_height})")
            print(f"DPI √©lev√© (>110): {'‚úÖ' if is_high_dpi else '‚ùå'} ({dpi:.1f})")

            # D√©cision finale
            is_portable = is_portable_size or is_low_res or is_high_dpi

            print(f"\n=== R√âSULTAT ===")
            if is_portable:
                print("üì± √âCRAN PORTABLE D√âTECT√â")
                if is_portable_size:
                    print(f"   ‚Üí Raison: Taille physique ({diagonal_inches:.1f}‚Ä≥ ‚â§ 16.5‚Ä≥)")
                elif is_high_dpi:
                    print(f"   ‚Üí Raison: DPI √©lev√© ({dpi:.1f} > 110)")
                elif is_low_res:
                    print(f"   ‚Üí Raison: R√©solution faible ({screen_width}x{screen_height})")

                print("   ‚Üí Interface responsive sera activ√©e")
                print("   ‚Üí Mise en page adapt√©e aux petits √©crans")
                print("   ‚Üí Boutons de navigation compacts")
            else:
                print("üñ•Ô∏è GRAND √âCRAN D√âTECT√â")
                print("   ‚Üí Interface standard sera utilis√©e")
                print("   ‚Üí Mise en page normale")
                print("   ‚Üí Fen√™tre maximis√©e")

            # Estimation du type d'√©cran
            print(f"\n=== ESTIMATION DU TYPE D'√âCRAN ===")
            if diagonal_inches <= 13:
                print(f"üì± Probablement un laptop ultraportable (‚â§13‚Ä≥)")
            elif diagonal_inches <= 16:
                print(f"üíª Probablement un laptop standard (13-16‚Ä≥)")
            elif diagonal_inches <= 20:
                print(f"üñ•Ô∏è Probablement un √©cran de bureau compact (17-20‚Ä≥)")
            elif diagonal_inches <= 27:
                print(f"üñ•Ô∏è Probablement un √©cran de bureau standard (21-27‚Ä≥)")
            else:
                print(f"üñ•Ô∏è Probablement un grand √©cran de bureau (>27‚Ä≥)")

            # Recommandations sp√©cifiques pour diff√©rents cas
            print(f"\n=== RECOMMANDATIONS ===")
            if screen_width == 1920 and screen_height == 1080:
                if diagonal_inches <= 16:
                    print("‚ö†Ô∏è  R√©solution Full HD sur petit √©cran d√©tect√©e")
                    print("   ‚Üí √âl√©ments d'interface peuvent sembler trop petits")
                    print("   ‚Üí Mode responsive fortement recommand√©")
                else:
                    print("‚úÖ R√©solution Full HD sur grand √©cran")
                    print("   ‚Üí Interface standard appropri√©e")

            return is_portable, diagonal_inches, dpi

        except Exception as e:
            print(f"‚ùå Erreur lors du calcul DPI: {str(e)}")
            print("   ‚Üí Utilisation de la d√©tection par r√©solution uniquement")

            is_portable = screen_width < 1366 or screen_height < 768
            print(f"\n=== R√âSULTAT (MODE FALLBACK) ===")
            if is_portable:
                print("üì± √âCRAN PORTABLE D√âTECT√â (par r√©solution)")
            else:
                print("üñ•Ô∏è GRAND √âCRAN D√âTECT√â (par r√©solution)")

            return is_portable, None, None

    finally:
        root.destroy()

if __name__ == "__main__":
    print("üîç Test de d√©tection d'√©cran portable pour l'application WiFi Analyzer")
    print("=" * 60)

    try:
        is_portable, diagonal, dpi = test_screen_detection()

        print(f"\n" + "=" * 60)
        print("‚úÖ Test termin√© avec succ√®s!")

        # Instructions pour l'utilisateur
        print(f"\n=== INSTRUCTIONS ===")
        if is_portable:
            print("üëâ Votre √©cran a √©t√© d√©tect√© comme portable.")
            print("   L'application utilisera automatiquement:")
            print("   ‚Ä¢ Interface compacte et responsive")
            print("   ‚Ä¢ Boutons de navigation simplifi√©s")
            print("   ‚Ä¢ Fen√™tre optimis√©e (95% de l'√©cran)")
            print("   ‚Ä¢ Polices et espacements adapt√©s")
        else:
            print("üëâ Votre √©cran a √©t√© d√©tect√© comme un grand √©cran.")
            print("   L'application utilisera:")
            print("   ‚Ä¢ Interface standard")
            print("   ‚Ä¢ Tous les contr√¥les de navigation")
            print("   ‚Ä¢ Fen√™tre maximis√©e")
            print("   ‚Ä¢ Polices et espacements normaux")

    except Exception as e:
        print(f"‚ùå Erreur durant le test: {str(e)}")
        print("   Veuillez v√©rifier votre environnement Tkinter")
