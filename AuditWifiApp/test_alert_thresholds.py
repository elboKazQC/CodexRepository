#!/usr/bin/env python3
"""
Script de test pour d√©montrer la diff√©rence entre les seuils d'alerte
anciens (trop s√©v√®res) et nouveaux (r√©alistes).
"""

def analyze_with_old_thresholds(signal_dbm, quality_percent):
    """Analyse avec les anciens seuils (trop s√©v√®res)"""
    alerts = []

    # Anciens seuils
    if signal_dbm < -80:
        alerts.append(f"üî¥ Signal CRITIQUE : {signal_dbm} dBm")
    elif signal_dbm < -75:
        alerts.append(f"‚ö†Ô∏è Signal faible : {signal_dbm} dBm")

    if quality_percent < 30:
        alerts.append(f"üî¥ Qualit√© CRITIQUE : {quality_percent}%")
    elif quality_percent < 50:
        alerts.append(f"‚ö†Ô∏è Qualit√© faible : {quality_percent}%")

    return alerts

def analyze_with_new_thresholds(signal_dbm, quality_percent):
    """Analyse avec les nouveaux seuils (r√©alistes)"""
    alerts = []

    # Nouveaux seuils r√©alistes
    if signal_dbm < -85:
        alerts.append(f"üî¥ Signal CRITIQUE : {signal_dbm} dBm")
    elif signal_dbm < -80:
        alerts.append(f"‚ö†Ô∏è Signal faible : {signal_dbm} dBm")

    if quality_percent < 20:
        alerts.append(f"üî¥ Qualit√© CRITIQUE : {quality_percent}%")
    elif quality_percent < 40:
        alerts.append(f"‚ö†Ô∏è Qualit√© faible : {quality_percent}%")

    return alerts

def get_signal_evaluation(signal_dbm):
    """√âvaluation du signal selon les standards WiFi"""
    if signal_dbm >= -50:
        return "‚úÖ Signal excellent (> -50 dBm)"
    elif signal_dbm >= -60:
        return "‚úÖ Signal tr√®s bon (-50 √† -60 dBm)"
    elif signal_dbm >= -70:
        return "‚ö†Ô∏è Signal acceptable (-60 √† -70 dBm)"
    elif signal_dbm >= -80:
        return "‚ö†Ô∏è Signal faible (-70 √† -80 dBm)"
    else:
        return "‚ùå Signal tr√®s faible (< -80 dBm)"

def main():
    print("üîç ANALYSE DES SEUILS D'ALERTE")
    print("=" * 50)

    # Donn√©es de votre rapport
    signal_moyen = -58.3
    signal_min = -71
    signal_max = -51
    qualite_moyenne = 83.0
    qualite_min = 57
    qualite_max = 97

    print(f"\nüìä VOS DONN√âES R√âELLES :")
    print(f"‚Ä¢ Signal moyen : {signal_moyen} dBm")
    print(f"‚Ä¢ Signal minimum : {signal_min} dBm")
    print(f"‚Ä¢ Signal maximum : {signal_max} dBm")
    print(f"‚Ä¢ Qualit√© moyenne : {qualite_moyenne}%")
    print(f"‚Ä¢ Qualit√© minimum : {qualite_min}%")
    print(f"‚Ä¢ Qualit√© maximum : {qualite_max}%")

    print(f"\nüéØ √âVALUATION SELON LES STANDARDS WIFI :")
    print(f"‚Ä¢ Signal moyen : {get_signal_evaluation(signal_moyen)}")
    print(f"‚Ä¢ Signal minimum : {get_signal_evaluation(signal_min)}")

    print(f"\n‚ùå AVEC LES ANCIENS SEUILS (trop s√©v√®res) :")
    print("   Seuils : Signal faible < -75 dBm, Qualit√© faible < 50%")

    # Test avec le signal minimum
    old_alerts_min = analyze_with_old_thresholds(signal_min, qualite_min)
    if old_alerts_min:
        for alert in old_alerts_min:
            print(f"   {alert}")
    else:
        print("   Aucune alerte")

    print(f"\n‚úÖ AVEC LES NOUVEAUX SEUILS (r√©alistes) :")
    print("   Seuils : Signal faible < -80 dBm, Qualit√© faible < 40%")

    # Test avec le signal minimum
    new_alerts_min = analyze_with_new_thresholds(signal_min, qualite_min)
    if new_alerts_min:
        for alert in new_alerts_min:
            print(f"   {alert}")
    else:
        print("   ‚úÖ Aucune alerte - R√©seau stable !")

    print(f"\nüí° CONCLUSION :")
    print(f"Avec un signal minimum de {signal_min} dBm et une qualit√© minimum de {qualite_min}% :")
    print(f"‚Ä¢ Anciens seuils : {len(old_alerts_min)} alerte(s) g√©n√©r√©e(s)")
    print(f"‚Ä¢ Nouveaux seuils : {len(new_alerts_min)} alerte(s) g√©n√©r√©e(s)")
    print(f"\nVotre r√©seau WiFi est en fait EXCELLENT !")
    print(f"Les nombreuses alertes (81.2%) √©taient dues √† des seuils trop conservateurs.")

    print(f"\nüõ†Ô∏è RECOMMANDATION :")
    print(f"Utilisez les nouveaux seuils qui sont align√©s avec les standards de l'industrie.")
    print(f"Cela donnera une √©valuation plus r√©aliste de la qualit√© de votre r√©seau.")

if __name__ == "__main__":
    main()
