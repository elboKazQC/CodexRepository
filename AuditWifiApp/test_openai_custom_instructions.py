#!/usr/bin/env python3
"""
Script de test pour d√©montrer les nouvelles capacit√©s d'instructions personnalis√©es OpenAI
"""

import sys
import os

# Ajouter le chemin du r√©pertoire src pour les imports
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.ai.simple_moxa_analyzer import analyze_moxa_logs

def test_custom_instructions():
    """Test des instructions personnalis√©es avec diff√©rents styles"""

    # Logs de test simul√©s
    test_logs = """
    2024-05-28 10:15:23 - WiFi: Connected to AP_PROD_01, Signal: -65 dBm
    2024-05-28 10:15:45 - WiFi: Roaming initiated, Signal dropped to -78 dBm
    2024-05-28 10:15:47 - WiFi: Scanning for better AP
    2024-05-28 10:15:50 - WiFi: Found AP_PROD_02, Signal: -58 dBm
    2024-05-28 10:15:52 - WiFi: Roaming completed to AP_PROD_02
    2024-05-28 10:16:15 - WiFi: Signal fluctuation detected, -62 to -70 dBm
    """

    # Configuration de test
    test_config = {
        "roaming_difference": 8,
        "roaming_mechanism": "snr",
        "turbo_roaming": True,
        "min_transmission_rate": 12,
        "wmm_enabled": True
    }

    print("üß™ TEST DES INSTRUCTIONS PERSONNALIS√âES OPENAI")
    print("=" * 50)

    # Test 1: Style rapide
    print("\nüìù TEST 1: Analyse rapide")
    print("-" * 30)
    custom_1 = "Analyse rapide en 3 lignes maximum avec score global seulement"
    print(f"Instructions: {custom_1}")
    print("R√©sultat attendu: R√©ponse courte et concise\n")

    # Test 2: Format bullet points
    print("üìù TEST 2: Format bullet points")
    print("-" * 30)
    custom_2 = "R√©sultats en bullet points avec √©mojis, focus sur les probl√®mes critiques"
    print(f"Instructions: {custom_2}")
    print("R√©sultat attendu: Format bullet points avec √©mojis\n")

    # Test 3: Focus technique
    print("üìù TEST 3: Focus technique roaming")
    print("-" * 30)
    custom_3 = "Focus exclusif sur les probl√®mes de roaming WiFi avec recommandations sp√©cifiques"
    print(f"Instructions: {custom_3}")
    print("R√©sultat attendu: Analyse sp√©cialis√©e roaming\n")

    # Test 4: Format tableau
    print("üìù TEST 4: Format tableau")
    print("-" * 30)
    custom_4 = "Pr√©sente sous forme de tableau: Probl√®me | Gravit√© | Solution | Impact"
    print(f"Instructions: {custom_4}")
    print("R√©sultat attendu: Tableau structur√©\n")

    print("üí° POUR TESTER R√âELLEMENT:")
    print("1. Lancez l'application: python runner.py")
    print("2. Allez dans l'onglet 'Analyse Logs Moxa'")
    print("3. Chargez des logs de test")
    print("4. Saisissez une des instructions ci-dessus")
    print("5. Cliquez sur 'Analyser les logs'")
    print("6. Observez comment OpenAI adapte sa r√©ponse !")

    print("\nüéØ EXEMPLES D'INSTRUCTIONS √Ä TESTER:")
    examples = [
        "Score global uniquement avec 2 recommandations max",
        "Style technique avec r√©f√©rences IEEE 802.11",
        "Comparaison avec standards Cisco et recommandations",
        "Format JSON avec structure: {score, problemes, solutions}",
        "Analyse en fran√ßais familier avec analogies simples",
        "Focus s√©curit√©: vuln√©rabilit√©s et failles uniquement"
    ]

    for i, example in enumerate(examples, 1):
        print(f"{i}. \"{example}\"")

    print("\n‚úÖ LES INSTRUCTIONS PERSONNALIS√âES SONT MAINTENANT PLEINEMENT FONCTIONNELLES !")

if __name__ == "__main__":
    test_custom_instructions()
