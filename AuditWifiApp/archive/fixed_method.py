# -*- coding: utf-8 -*-
# M√©thode corrig√©e pour remplacer dans main.py

def show_signal_quality(self):
    data = self.get_network_data()
    message = f"Analyse du signal WiFi:\n\n"
    
    if self.status == "Excellent":
        message += f"‚úÖ Signal: Excellent ({data['signal_percent']}%, RSSI: {data['rssi']} dBm)\n"
    elif self.status == "Bon":
        message += f"‚ö†Ô∏è Signal: Acceptable ({data['signal_percent']}%, RSSI: {data['rssi']} dBm)\n"
    else:
        message += f"üõë Signal: Faible ({data['signal_percent']}%, RSSI: {data['rssi']} dBm)\n"
    
    message += f"\nPoint d'acc√®s: {data['bssid']}\n"
    message += f"Canal: {data['channel']} ({data['band']})\n"
    message += f"Type de radio: {data['radio_type']}\n"
    message += f"D√©bit: {data['rx_speed']} / {data['tx_speed']} Mbps\n"
    
    if data['ping'] > 100:
        message += f"üõë Ping √©lev√©: {data['ping']} ms > 100 ms\n"
    else:
        message += f"‚úÖ Ping: {data['ping']} ms\n"
    
    message += "\nRecommandations:\n"
    if self.status == "Excellent":
        message += "‚Ä¢ Emplacement optimal pour les AMR\n"
        message += "‚Ä¢ Continuez sur cette trajectoire\n"
    elif self.status == "Bon":
        message += "‚Ä¢ Emplacement acceptable, mais surveillez les fluctuations\n"
        message += "‚Ä¢ Consid√©rez un AP suppl√©mentaire pour plus de fiabilit√©\n"
    else:
        message += "‚Ä¢ Zone probl√©matique pour les AMR - Risque de d√©connexion\n"
        message += "‚Ä¢ V√©rifiez la distance avec l'AP et les obstacles\n"
        message += "‚Ä¢ Installation d'un AP suppl√©mentaire recommand√©e\n"
        message += "‚Ä¢ Assurez une meilleure couverture avec chevauchement d'APs\n"
        
    messagebox.showinfo("Analyse du signal", message)