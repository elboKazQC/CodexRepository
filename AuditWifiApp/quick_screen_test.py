#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test rapide de d√©tection d'√©cran portable
Compatible avec votre environnement Windows
"""

def main():
    print("üîç Test de d√©tection d'√©cran portable")
    print("=" * 50)

    try:
        import tkinter as tk
        import math

        # Cr√©er une fen√™tre temporaire
        root = tk.Tk()
        root.withdraw()  # Masquer

        # Informations de base
        width = root.winfo_screenwidth()
        height = root.winfo_screenheight()

        print(f"R√©solution: {width}x{height}")

        try:
            # Calcul DPI et taille physique
            dpi = root.winfo_fpixels('1i')
            diagonal_px = math.sqrt(width**2 + height**2)
            diagonal_in = diagonal_px / dpi

            print(f"DPI: {dpi:.1f}")
            print(f"Diagonale: {diagonal_in:.1f} pouces")

            # Crit√®res de d√©tection
            small_size = diagonal_in <= 16.5
            low_res = width < 1366 or height < 768
            high_dpi = dpi > 110

            is_portable = small_size or low_res or high_dpi

            print(f"\nCrit√®res:")
            print(f"  Petit √©cran (‚â§16.5‚Ä≥): {'‚úÖ' if small_size else '‚ùå'}")
            print(f"  R√©solution faible: {'‚úÖ' if low_res else '‚ùå'}")
            print(f"  DPI √©lev√© (>110): {'‚úÖ' if high_dpi else '‚ùå'}")

            print(f"\nR√©sultat:")
            if is_portable:
                print("üì± √âCRAN PORTABLE ‚Üí Interface responsive")
                print("   ‚Ä¢ Boutons compacts")
                print("   ‚Ä¢ Navigation simplifi√©e")
                print("   ‚Ä¢ Fen√™tre 95% √©cran")
            else:
                print("üñ•Ô∏è GRAND √âCRAN ‚Üí Interface standard")
                print("   ‚Ä¢ Interface compl√®te")
                print("   ‚Ä¢ Fen√™tre maximis√©e")

        except Exception as e:
            print(f"Erreur DPI: {e}")
            is_portable = width < 1366 or height < 768
            print(f"Mode fallback: {'Portable' if is_portable else 'Grand √©cran'}")

        root.destroy()

    except Exception as e:
        print(f"Erreur: {e}")

    print("\n‚úÖ Test termin√©")
    input("Appuyez sur Entr√©e pour continuer...")

if __name__ == "__main__":
    main()
